<?php
// src/Study/BlogBundle/Entity/Blog.php
namespace Study\BlogBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\HttpFoundation\File\UploadedFile;

/**
 * @ORM\Entity
 * @ORM\Table(name="post")
 * @ORM\HasLifecycleCallbacks()
 */

class Post
{
	/**
	 * @ORM\Id
	 * @ORM\Column(type="integer")
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	protected $id;
	
	/**
	 * @ORM\ManyToOne(targetEntity="Blog", inversedBy="posts")
	 * @ORM\JoinColumn(name="blog", referencedColumnName="id")
	 */
	protected $blog;
	
	/**
	 * @ORM\Column(type="string", length=100)
	 *
	 */
	protected $title;
	
	/**
	 * @ORM\Column(name="short_description", type="text")
	 * 
	 */
	protected $shortDescription;
	
	/**
	 * @ORM\Column(name="full_description", type="text")
	 * 
	 */
	protected $fullDescription;
	
	/**
	 * @ORM\Column(type="integer")
	 * 
	 */
	protected $viewed;
	
	/**
	 * @ORM\Column(type="string", length=100)
	 * 
	 */
	protected $author;
	
		
	/**
	 * @ORM\Column(name="post_image",type="string", length=255, nullable=true)
	 */
	public $postImage;
	
	/**
	 * @Assert\File(maxSize="6000000")
	 */
	private $file;

	/**
	 *
	 * @ORM\Column(name="created_date", type="datetime")
	 */
	protected $createdDate;
	
	/**
	 *
	 * @ORM\Column(name="updated_date",type="datetime")
	 */
	protected $updatedDate;
	
	/**
	 * Get id
	 */
	public function getId()
	{
		return $this->id;
	}
	
	/**
	 * Set id
	 * @param type $id
	 */
	public function setId($id)
	{
		$this->id = $id;
	}
	
	/**
	 * Get title
	 */
	public function getTitle()
	{
		return $this->title;
	}
	
	/**
	 * Set title
	 */
	public  function setTitle($title)
	{
		$this->title = $title;
	}
	
	/**
	 * Get cratedDate
	 */
	public function getCreatedDate()
	{
		return $this->createdDate;
	}
	
	/**
	 * Set createdDate
	 */
	public function setCreatedDate(\DateTime $createdDate = null)
	{
		$this->createdDate = $createdDate;
	}
	
	/**
	 * Get updatedDate
	 */
	public function getUpdatedDate()
	{
		return $this->updatedDate;
	}
	
	/**
	 * Set updatedDate
	 */
	public function setUpdatedDate(\DateTime $updatedDate = null)
	{
		$this->updatedDate = $updatedDate;
	}

	/**
	 * Get viewed
	 */
	public function getViewed()
	{
		return $this->viewed;
	}
	
	/**
	 * Set viewed
	 */
	public function setViewed($viewed = 0)
	{
		$this->viewed = $viewed;
	}

	/**
	 * Get author
	 */
	public function getAuthor()
	{
		return $this->author;
	}
	
	/**
	 * Set author
	 */
	public function setAuthor($author)
	{
		$this->author = $author;
	}


    /**
     * Set shortDescription
     *
     * @param string $shortDescription
     * @return Post
     */
    public function setShortDescription($shortDescription)
    {
        $this->shortDescription = $shortDescription;
    
        return $this;
    }
	
    /**
     * Get shortDescription
     *
     * @return string 
     */
    public function getShortDescription()
    {
        return $this->shortDescription;
    }

    /**
     * Set fullDescription
     *
     * @param string $fullDescription
     * @return Post
     */
    public function setFullDescription($fullDescription)
    {
        $this->fullDescription = $fullDescription;
    
        return $this;
    }

    /**
     * Get fullDescription
     *
     * @return string 
     */
    public function getFullDescription()
    {
        return $this->fullDescription;
    }

    /**
     * Set blog
     *
     * @param \Study\BlogBundle\Entity\Blog $blog
     * @return Post
     */
    public function setBlog(\Study\BlogBundle\Entity\Blog $blog = null)
    {
        $this->blog = $blog;
    
        return $this;
    }

    /**
     * Get blog
     *
     * @return \Study\BlogBundle\Entity\Blog 
     */
    public function getBlog()
    {
        return $this->blog;
    }
	
		/**
	 * @ORM\PrePersist
	 */
	public function prePersist()
	{
		$this->createdDate = new \DateTime();
		$this->updatedDate = new \DateTime();
	}
	
	/**
	 * @ORM\PreUpdate
	 */
	public function preUpdate()
	{
		$this->updatedDate = new \DateTime();
	}
	
	/**
	 * @param: no param
	 * @return absolute path
	 */
	public function getAbsolutePath()
	{
		return null === $this->path
				? null
				: $this->getUploadRootDir().'/'.$this->path;
	}
	
	public function getWebPath()
	{
		return null===$this->path
				? null 
				: $this->getUploadDir().'/'.$this->path;
	}
	
	/**
	 * 
	 * @return path
	 */
	protected function getUploadRootDir()
	{
		//the absolute directory path where uploaded
		// documents should be saved
		return __DIR__.'/../../../../web/'.$this->getUploadDir();
	}
	
	/**
	 * 
	 * @return path Upload
	 */
	protected function getUploadDir()
	{
		// get rid of the __DIR__ so it doesn't scew up
		// When displaying uploaded doc/image in the view
		return 'uploads/documents';
	}
}